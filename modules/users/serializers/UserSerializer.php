<?php

include_once __DIR__.'/../../common/serializers/serializer.php';


class UserSerializer extends AbstractModelSerializer {

	private static $FIELD_ID = 'id';
	private static $FIELD_USERNAME = 'username';
	private static $FIELD_FIRST_NAME = 'first_name';
	private static $FIELD_LAST_NAME = 'last_name';
	private static $FIELD_PASSWORD = 'password';

	protected $MODEL_FIELDS = [
		[ 'fieldname' => 'id', 'getter' => 'getId' , 'setter' => 'setId'],
		[ 'fieldname' => 'username', 'getter' => 'getUsername', 'setter' => 'setUsername'],
		[ 'fieldname' => 'first_name', 'getter' => 'getFirst_name', 'setter' => 'setFirs_name'],
		[ 'fieldname' => 'last_name', 'getter' => 'getLast_name', 'setter' => 'setLast_name'],
		[ 'fieldname' => 'email', 'getter' => 'getEmail', 'setter' => 'setEmail'],
		[ 'fieldname' => 'password', 'getter' => 'NOGET', 'setter' => 'setHashedPassword'],
	];
	protected $MODEL_CLASS = User::class;
	protected $QUERY_CLASS = UserQuery::class;

	public function __construct( $raw_data, $instance=null, $many=false) {
		parent::__construct( $raw_data, $instance, $many );
		$this->REQUIRED_FIELDS = [
			UserSerializer::$FIELD_ID
		];
	}

	public function is_valid(): bool {
		return parent::is_valid(); // TODO: Change the autogenerated stub
	}

	public function asContext($ctx=null): ?ExecutionContext {

		if (!$this->is_valid()) {
			return null;
		}

		if ($ctx == null) {
			$ctx = new ExecutionContext();
		}
		$ctx->setValue('id', $this->instance ? $this->instance->getId() : (int)$this->raw_data[UserSerializer::$FIELD_ID]);
		$ctx->setValue('password', $this->instance ? $this->instance->getPassword() : $this->raw_data[UserSerializer::$FIELD_PASSWORD]);
		return $ctx;
	}
}
