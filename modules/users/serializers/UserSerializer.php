<?php

include_once __DIR__.'/../../common/serializers/serializer.php';


class UserSerializer extends AbstractModelSerializer {

	private static $FIELD_ID = 'id';
	private static $FIELD_USERNAME = 'username';
	private static $FIELD_FIRST_NAME = 'first_name';
	private static $FIELD_LAST_NAME = 'last_name';
	private static $FIELD_PASSWORD = 'password';

	protected $MODEL_FIELDS = [
		[ 'fieldname' => 'id', 'method' => 'getId' ],
		[ 'fieldname' => 'username', 'method' => 'getUsername'],
		[ 'fieldname' => 'first_name', 'method' => 'getFirst_name'],
		[ 'fieldname' => 'last_name', 'method' => 'getLast_name'],
		[ 'fieldname' => 'email', 'method' => 'getEmail'],
	];
	protected $MODEL_CLASS = User::class;

	public function __construct( $raw_data, $instance=null, $many=false) {
		parent::__construct( $raw_data, $instance, $many );
		$this->REQUIRED_FIELDS = [
			UserSerializer::$FIELD_ID
		];
	}

//	public function serialize(): array {
//		if ($this->instance === null) {
//			return array();
//		}
//
//		$serialized = array();
//		$serialized['id'] = $this->instance->getId();
//		$serialized['username'] = $this->instance->getUsername();
//		$serialized['first_name'] = $this->instance->getfirst_name();
//		$serialized['last_name'] = $this->instance->getlast_name();
//		$serialized['email'] = $this->instance->getEmail();
//
//		return $serialized;
//	}

	public function is_valid(): bool {
		return parent::is_valid(); // TODO: Change the autogenerated stub
	}

	public function asContext($ctx=null): ?ExecutionContext {

		if (!$this->is_valid()) {
			return null;
		}

		if ($ctx == null) {
			$ctx = new ExecutionContext();
		}
		$ctx->setValue('password', $this->instance ? $this->instance->getPassword() : $this->raw_data[UserSerializer::$FIELD_PASSWORD]);
		return $ctx;
	}
}
