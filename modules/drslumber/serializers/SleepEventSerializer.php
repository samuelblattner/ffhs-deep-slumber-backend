<?php

include_once __DIR__.'/../../common/serializers/serializer.php';


class SleepEventSerializer extends AbstractModelSerializer {

	private static $FIELD_ID = 'id';
	private static $FIELD_TIMESTAMP = 'timestamp';
	private static $FIELD_TYPE = 'type';
	private static $FIELD_VALUE = 'value';

	protected $MODEL_FIELDS = [
		[ 'fieldname' => 'id', 'getter' => 'getId' , 'setter' => 'NOSET'],
		[ 'fieldname' => 'timestamp', 'getter' => 'getTimestampISO8601', 'setter' => 'NOSET'],
		[ 'fieldname' => 'type', 'getter' => 'getType', 'setter' => 'NOSET'],
		[ 'fieldname' => 'value', 'getter' => 'getValue', 'setter' => 'NOSET'],
	];
	protected $MODEL_CLASS = SleepEvent::class;
	protected $QUERY_CLASS = SleepEventQuery::class;

	public function __construct( $raw_data, $instance=null, $many=false) {
		parent::__construct( $raw_data, $instance, $many );
		$this->REQUIRED_FIELDS = [
			SleepEventSerializer::$FIELD_ID,
			SleepEventSerializer::$FIELD_TIMESTAMP,
			SleepEventSerializer::$FIELD_TYPE,
			SleepEventSerializer::$FIELD_VALUE
		];
	}

	public function is_valid(): bool {
		return parent::is_valid(); // TODO: Change the autogenerated stub
	}

	public function asContext($ctx=null): ?ExecutionContext {

		if (!$this->is_valid()) {
			return null;
		}

		if ($ctx == null) {
			$ctx = new ExecutionContext();
		}
		$ctx->setValue('id', $this->instance ? $this->instance->getId() : (int)$this->raw_data[SleepEventSerializer::$FIELD_ID]);
		$ctx->setValue('timestamp', $this->instance ? $this->instance->getTimestamp() : (int)$this->raw_data[SleepEventSerializer::$FIELD_TIMESTAMP]);
		$ctx->setValue('type', $this->instance ? $this->instance->getType() : (int)$this->raw_data[SleepEventSerializer::$FIELD_TYPE]);
		$ctx->setValue('value', $this->instance ? $this->instance->getValue() : (int)$this->raw_data[SleepEventSerializer::$FIELD_VALUE]);
		return $ctx;
	}

}
