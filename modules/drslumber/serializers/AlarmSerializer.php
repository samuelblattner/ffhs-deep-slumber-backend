<?php

include_once __DIR__.'/../../common/serializers/serializer.php';


class AlarmSerializer extends AbstractModelSerializer {

	private static $FIELD_ID = 'id';
	private static $FIELD_EARLIEST_WAKE_UP = 'earliest';
	private static $FIELD_LATEST_WAKE_UP = 'latest';
	private static $FIELD_ACTIVE = 'active';
	private static $FIELD_DEVICE_HWID = 'device_hwid';

	protected $MODEL_FIELDS = [
		[ 'fieldname' => 'id', 'getter' => 'getId' , 'setter' => 'NOSET'],
		[ 'fieldname' => 'earliest', 'getter' => 'getEarliestSimple', 'setter' => 'setEarliest'],
		[ 'fieldname' => 'latest', 'getter' => 'getLatestSimple', 'setter' => 'setLatest'],
		[ 'fieldname' => 'active', 'getter' => 'getActive', 'setter' => 'setActive'],
		[ 'fieldname' => 'device_hwid', 'getter' => 'getDevicehwid', 'setter' => 'setDevicehwid']
	];
	protected $MODEL_CLASS = Alarm::class;
	protected $QUERY_CLASS = AlarmQuery::class;

	public function __construct( $raw_data, $instance=null, $many=false) {
		parent::__construct( $raw_data, $instance, $many );
		$this->REQUIRED_FIELDS = [
			AlarmSerializer::$FIELD_ID,
			AlarmSerializer::$FIELD_LATEST_WAKE_UP,
			AlarmSerializer::$FIELD_ACTIVE,
			AlarmSerializer::$FIELD_DEVICE_HWID,
		];
	}

	public function is_valid(): bool {
		return parent::is_valid(); // TODO: Change the autogenerated stub
	}

	public function asContext($ctx=null): ?ExecutionContext {

		if (!$this->is_valid()) {
			return null;
		}

		if ($ctx == null) {
			$ctx = new ExecutionContext();
		}
		$ctx->setValue('id', $this->instance ? $this->instance->getId() : (int)$this->raw_data[AlarmSerializer::$FIELD_ID]);
		$ctx->setValue('earliest', $this->instance ? $this->instance->getEarliest() : (int)$this->raw_data[AlarmSerializer::$FIELD_EARLIEST_WAKE_UP]);
		$ctx->setValue('latest', $this->instance ? $this->instance->getLatest() : (int)$this->raw_data[AlarmSerializer::$FIELD_LATEST_WAKE_UP]);
		$ctx->setValue('active', $this->instance ? $this->instance->getActive() : (int)$this->raw_data[AlarmSerializer::$FIELD_ACTIVE]);
		$ctx->setValue('device_hwid', $this->instance ? $this->instance->getActive() : (int)$this->raw_data[AlarmSerializer::$FIELD_DEVICE_HWID]);
		return $ctx;
	}

}
